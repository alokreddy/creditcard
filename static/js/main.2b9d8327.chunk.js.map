{"version":3,"sources":["components/Card.js","App.js","serviceWorker.js","index.js"],"names":["getOptions","start","end","options","i","push","react_default","a","createElement","key","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fields","errors","formIsValid","name","undefined","match","ccnumber","nCheck","nDigit","bEven","n","replace","length","cDigit","charAt","parseInt","valid_card_number","expiry_month","expiry_year","today","Date","someday","setFullYear","expiry","cvc","setState","e","preventDefault","cardValidation","alert","field","target","value","thisYear","getFullYear","className","role","onSubmit","cardSubmit","bind","htmlFor","type","id","placeholder","autofocus","onChange","handleChange","React","Component","App","components_Card","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b9d8327.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Card extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  }\n\n  cardValidation() {\n    let fields = this.state.fields;\n    let errors = this.state.errors;\n    let formIsValid = true;\n\n    //name validation logic\n    if (!fields.name) {\n      formIsValid = false;\n      errors.name = \"Please enter a name.\";\n    }\n\n    if (typeof fields.name !== undefined) {\n      if (!fields.name.match(/^[a-zA-Z ]{2,30}$/)) {\n        formIsValid = false;\n        errors.name = \"Only letters allowed in name.\";\n      }\n    }\n\n    //Card number validation logic\n    if (!fields.ccnumber) {\n      formIsValid = false;\n      errors.ccnumber = \"Please enter a card number.\";\n    }\n\n    if (typeof fields.ccnumber !== undefined) {\n      if (!fields.ccnumber.match(/[^0-9-\\s]+/)) {\n        formIsValid = false;\n        errors.ccnumber = \"Please enter a valid card number.\";\n      }\n    }\n\n    function valid_card_number(ccnumber) {\n      var nCheck = 0,\n        nDigit = 0,\n        bEven = false;\n      ccnumber = ccnumber.replace(/\\D/g, \"\");\n\n      for (var n = ccnumber.length - 1; n >= 0; n--) {\n        var cDigit = ccnumber.charAt(n),\n          nDigit = parseInt(cDigit, 10);\n\n        if (bEven) {\n          if ((nDigit *= 2) > 9) nDigit -= 9;\n        }\n\n        nCheck += nDigit;\n        bEven = !bEven;\n      }\n\n      return nCheck % 10 == 0;\n    }\n\n    if (!valid_card_number(fields.ccnumber)) {\n      formIsValid = false;\n      errors.ccnumber =\n        \"Please enter a hank number.\";\n    }\n\n    //Expiry date validation\n    if (!fields.expiry_month) {\n      formIsValid = false;\n      errors.expiry_month = \"Please enter a date.\";\n    }\n\n    if (typeof fields.expiry_month !== undefined) {\n      if (!fields.expiry_month.match(/\\b(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})\\b/)) {\n        formIsValid = false;\n        errors.expiry_month = \"Please enter a valid date.\";\n      }\n    }\n\n    if (!fields.expiry_year) {\n        formIsValid = false;\n        errors.expiry_year = \"Please enter a date.\";\n    }\n\n    if (typeof fields.expiry_year !== undefined) {\n    if (!fields.expiry_year.match(/\\b(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})\\b/)) {\n        formIsValid = false;\n        errors.expiry_year = \"Please enter a valid date.\";\n    }\n    }    \n\n    let today = new Date();\n    let someday = new Date();\n    someday.setFullYear(fields.expiry_year, fields.expiry_month,1);\n    if(someday < today){\n        formIsValid = false;\n        errors.expiry = \"Please enter a valid date.\"\n    }\n\n    //cvc validation logic\n    if (!fields.cvc) {\n      formIsValid = false;\n      errors.cvc = \"Please enter a CVC number.\";\n    }\n\n    if (typeof fields.cvc !== undefined) {\n      if (!fields.cvc.match(/^[0-9]{3,4}$/)) {\n        formIsValid = false;\n        errors.cvc = \"CVC entered is not valid.\";\n      }\n    }\n\n    this.setState({ errors });\n    return formIsValid;\n  }\n\n  cardSubmit(e) {\n    e.preventDefault();\n\n    if (this.cardValidation()) {\n      alert(\"Card is submitted successfully!\");\n    } else {\n      alert(\"Please check submission form has errors.\");\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n\n  render() {\n    const thisYear = new Date().getFullYear();\n\n    return (\n<div className=\"container\">\n<div className=\"row\">\n  <div className=\"col-xs-12 col-md-4\">\n    <div className=\"panel panel-default\">\n      <div className=\"panel-heading\">\n        <h3 className=\"panel-title\">\n          Payment Details\n        </h3>\n      </div>\n      <div className=\"panel-body\">\n        <form className='form-horizontal' role=\"form\" onSubmit={this.cardSubmit.bind(this)}>\n        <div className=\"form-group\">\n            <label htmlFor=\"ccnumber\">\n              Card Number</label>\n            <div className=\"input-group\">\n              <input \n                type=\"text\"\n                className=\"form-control\"\n                id=\"ccnumber\"\n                name='ccnumber' \n                placeholder=\"Valid Card Number\"\n                autofocus\n                onChange={this.handleChange.bind(this, \"ccnumber\")} \n                />\n         <small className=\"error\">{this.state.errors[\"ccnumber\"]}</small>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Name on card</label>\n            <div className=\"input-group\">\n              <input \n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\" \n                name='name'\n                placeholder=\"Valid Card Name\"\n                onChange={this.handleChange.bind(this, \"name\")} \n                />\n             <small className=\"error\">{this.state.errors[\"name\"]}</small>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-7 col-md-7\">\n              <div className=\"form-group\">\n                <label htmlFor=\"expityMonth\">\n                  Expiry Date</label>\n                <div className=\"col-xs-6 col-lg-6 pl-ziro\">\n               <select\n                    className='form-control col-sm-12'\n                onChange={this.handleChange.bind(this, \"expiry_month\")}\n                name=\"expiry-month\"\n                id=\"expiry-month\"\n                >\n                <option>Month</option>\n                {getOptions(1, 12)}\n              </select>\n                  {/* <input type=\"text\" className=\"form-control\" id=\"expityMonth\" placeholder=\"MM\" required /> */}\n                </div>\n                <div className=\"col-xs-6 col-lg-6 pl-ziro\">\n             <select\n                className='form-control col-sm-12'\n                onChange={this.handleChange.bind(this, \"expiry_year\")}\n                name=\"expiry-year\"\n              >\n                <option>Year</option>\n                {getOptions(thisYear, thisYear+15)}\n              </select>\n                  {/* <input type=\"text\" className=\"form-control\" id=\"expityYear\" placeholder=\"YY\" required /> */}\n                  </div>\n              </div>\n            </div>\n            <div className=\"col-xs-5 col-md-5 pull-right\">\n              <div className=\"form-group\">\n                <label htmlFor=\"cvc\">\n                  CV Code</label>\n                <input \n                type=\"password\" \n                className=\"form-control\" \n                id=\"cvc\" \n                placeholder=\"Security Code\"\n                onChange={this.handleChange.bind(this, \"cvc\")} \n                />\n             <small className=\"error\">{this.state.errors[\"cvc\"]}</small>\n              </div>\n            </div>\n          </div>\n          <div className=\"checkbox pull-right\">\n          <label>\n            <input type=\"checkbox\" />\n            Remember\n          </label>\n        </div>\n\n          <br />\n    <button type='submit' className=\"btn btn-success btn-lg btn-block\">Pay</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n    );\n  }\n}\n\nfunction getOptions(start, end) {\n  const options = [];\n\n  for (let i = start; i <= end; i++) {\n    options.push(<option key={i}>{i}</option>);\n  }\n\n  return options;\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport './App.css';\nimport Card from './components/Card';\n\nclass App extends Component {\n  render() {\n    return (\n      <Card/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}